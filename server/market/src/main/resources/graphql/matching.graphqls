type Matching {
    matchingId: ID
    user: User
    category: String
    minPrice: Int
    maxPrice: Int
    transaction: String
    createdDate: String
    modifiedDate: String
}

type MatchResponse {
    matchingId: Int
    category: String
    minPrice: Int
    maxPrice: Int
    hashtag: [String]
    transaction: String
    createdDate: String
    possibility: String
}

input MatchInput {
    category: String
    minPrice: Int
    maxPrice: Int
    hashtag: [String]
    transaction: String
}

extend type Query {
    findMatchingByUserId: [MatchResponse]
}

extend type Mutation {
    createMatching(input: MatchInput!): Matching
    deleteMatching(matchingId: Int): Int
}